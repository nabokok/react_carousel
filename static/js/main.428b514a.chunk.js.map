{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","position","setPosition","isNextButtonDisabled","length","Math","abs","className","style","width","transform","transition","map","image","index","src","alt","height","type","disabled","onClick","prevPosition","prev","slideNumber","ceil","restItems","App","state","key","value","this","setState","htmlFor","id","placeholder","min","onChange","e","handleInputChange","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.428b514a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [position, setPosition] = useState(0);\n\n  const isNextButtonDisabled = itemWidth * images.length\n    === Math.abs(position) + frameSize * itemWidth;\n\n  const showNextTwoImages = () => {\n    const slideNumber = Math.ceil(Math.abs(position / (step * itemWidth)));\n    const restItems = (images.length - step * slideNumber) - frameSize;\n\n    if (restItems < frameSize && restItems < step) {\n      setPosition((prevPosition) => {\n        return prevPosition - restItems * itemWidth;\n      });\n    } else {\n      setPosition((prevPosition) => prevPosition - step * itemWidth);\n    }\n  };\n\n  const showPrevTwoImages = () => {\n    if (Math.abs(position) >= itemWidth * step) {\n      setPosition((prevPosition) => {\n        return prevPosition + step * itemWidth;\n      });\n    } else {\n      setPosition(prev => prev - position);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{ width: frameSize * itemWidth + 2 * (frameSize - 1) }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${position}px)`,\n            transition: `transform ${animationDuration}ms ease`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                className=\"Carousel__image\"\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div\n        className=\"Carousel__buttons-wrapper\"\n        style={{ width: `${frameSize * itemWidth}px` }}\n      >\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          disabled={position === 0}\n          onClick={showPrevTwoImages}\n        >\n          &lt;\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className=\"Carousel__button\"\n          disabled={isNextButtonDisabled}\n          onClick={showNextTwoImages}\n        >\n          &gt;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  handleInputChange(key: string, value: number) {\n    this.setState(prev => ({\n      ...prev,\n      [key]: value,\n    }));\n  }\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n        <div className=\"Options\">\n          <div className=\"Options__item\">\n            <label htmlFor=\"stepId\">Step</label>\n            <input\n              id=\"stepId\"\n              className=\"Options__input\"\n              placeholder=\"Step\"\n              type=\"number\"\n              min={1}\n              value={this.state.step}\n              onChange={(e) => this.handleInputChange('step', +e.target.value)}\n            />\n          </div>\n          <div className=\"Options__item\">\n            <label htmlFor=\"frameId\">Frame Size</label>\n            <input\n              id=\"frameId\"\n              className=\"Options__input\"\n              placeholder=\"Frame Size\"\n              type=\"number\"\n              min={1}\n              value={this.state.frameSize}\n              onChange={(e) => {\n                this.handleInputChange('frameSize', +e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"Options__item\">\n            <label htmlFor=\"itemId\">Item Width (px)</label>\n            <input\n              id=\"itemId\"\n              className=\"Options__input\"\n              placeholder=\"Item Width\"\n              type=\"number\"\n              min={130}\n              value={this.state.itemWidth}\n              onChange={(e) => {\n                this.handleInputChange('itemWidth', +e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"Options__item\">\n            <label htmlFor=\"duration\">Animation Duration (ms)</label>\n            <input\n              id=\"duration\"\n              className=\"Options__input\"\n              placeholder=\"Animation Duration\"\n              type=\"number\"\n              min={0}\n              step={500}\n              value={this.state.animationDuration}\n              onChange={(e) => {\n                this.handleInputChange('animationDuration', +e.target.value);\n              }}\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}